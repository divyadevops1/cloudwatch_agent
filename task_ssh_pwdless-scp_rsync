ssh passwordless from ec2-A to ec2-B
source A
$ssh-keygen -t rsa -b 2048
It will create:
~/.ssh/id_rsa (private key)
~/.ssh/id_rsa.pub (public key)

$ cat ~/.ssh/id_rsa.pub
copy the output
# On Machine B
mkdir -p ~/.ssh
echo "<paste-public-key-here>" >> ~/.ssh/authorized_keys
chmod 600 ~/.ssh/authorized_keys

test connection from source to remote dest ip B
$ssh ec2-user@<remote-ip>
 example:
$ ssh ec2-user@3.145.86.177
if it connects 
scp /home/ec2-user/newfile.txt ec2-user@3.145.86.177:/home/ec2-user/files
test the file exists in destination machine.


if you want to transfer files from local machine to remote server give public key of the destination machine
 scp -i "/c/Users/HP/Downloads/docker_class1.pem"  "/c/Users/HP/Downloads/yesterday.txt" ubuntu@13.59.173.22:/home/ubuntu/files/
yesterday.txt  

check in the remote server the file existed .


transferring directories
 scp -i "/c/Users/HP/Downloads/docker_class1.pem" -r "/c/Users/HP/Downloads/today/" ubuntu@13.59.173.22:/home/ubuntu/files/

check in the remote machine the directory exists

if you want to transfer the files from destiantion machine to source machine
scp  ec2-user@3.145.86.177:/home/ec2-user/files/testing_scp .


transferring file between one instnace has pem key and other instance has no pem key trying to connect first by copying the public key to the other instance authorized keys
source machine first find where is the pem key 
ls ~/Downloads/*.pem
find ~/Downloads -name "*.pem"
cd .ssh
ls
cat id_rsa.pub
//copy the public key
on destination machine which as no pem key 
 mkdir -p ~/.ssh
 echo "<paste-public-key-here>" >> ~/.ssh/authorized_keys
 chmod 600 ~/.ssh/authorized_keys

test connection from source to remote dest ip B  public ip
$ssh ec2-user@<remote-ip>
 example:
$ ssh ec2-user@3.145.86.177
if it connects 
scp /home/ec2-user/newfile.txt ec2-user@3.145.86.177:/home/ec2-user/files
test the file exists in destination machine.

to get the files from the destination machine to source machine
from source machine
scp ec2-user@18.118.126.116:/home/ec2-user/current_file.txt .

rsync

OPTION 1: Practice Locally on One EC2 Machine (Safer for Beginners)
Step 1: Create two folders
mkdir -p ~/source_folder ~/destination_folder

Step 2: Add sample files
echo "Hello from rsync" > ~/source_folder/file1.txt
echo "Another file" > ~/source_folder/file2.txt

Step 3: Run rsync to sync from source to destination
rsync -av ~/source_folder/ ~/destination_folder/

Step 4: Verify
ls ~/destination_folder
cat ~/destination_folder/file1.txt

âœ… OPTION 2: Practice Between Two EC2 Instances (Real Use Case)
Ensure both EC2 instances are running, and that:

You have the .pem file

SSH is working between them

Step 1: Create a test file on EC2-1

mkdir ~/test_rsync
echo "EC2 to EC2 rsync test" > ~/test_rsync/demo.txt
Step 2: Run rsync from EC2-1 to EC2-2

//if you already tried ssh passwordless connection between ec2 instnace if your ec2 source is already connecting ec2 passwordless already from ec2 source do this
mkdir ~/test_rsync
echo "EC2 to EC2 rsync test" > ~/test_rsync/demo.txt
rsync -avz  ~/test_rsync/ ec2-user@18.118.126.116:/home/ec2-user/received/
or
rsync -avz -e "ssh -i your-key.pem" ~/test_rsync/ ec2-user@<EC2-2-Public-IP>:/home/ec2-user/received/
Replace your-key.pem and <EC2-2-Public-IP> with your values.

Step 3: SSH into EC2-2 and verify

ssh -i your-key.pem ec2-user@<EC2-2-Public-IP>
ls ~/received
cat ~/received/demo.txt


